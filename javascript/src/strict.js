
/**
 * * strict mode (엄격 모드)
 * ? 지금까지의 개념을 공부하면서 얻게 된 불편함은 의도치 않은 동작을
 * ? 자바스크립트가 꽤 다양하게 보여준다는 것이다.
 * ? 선언되지도 않은 전역 변수 사용하기, 중복 식별자 사용 등등, 개발자가 인지하고 있다
 * ? 할지라도 언제든지 문제가 생길 수 있고, 문제는 사소하게 일어나 엄청나게 터져버리는 경우가 다반사기 때문에 더욱 조심해야 한다.
 * TODO 엄격 모드를 사용해 생길 수 있는 잠재적인 문제를 사전에 방지할 수 있는 모드가 바로 엄격 모드다.
 * TODO 자바스크립트 라이브러리 중에는 ESlint 라는 개선 도구가 있다. 이걸 쓰는게 훠워워월씬 편할 수 있으나, 기본 개념은 잡아야 한다.
 */


/** 
  * * strict mode 의 적용 방식
  * 
  * ? 전역의 선두나 함수의 블록 코드 선두에 'use stric'; 를 추가하면 된다.
 */

// ? 'use strict';

// ? console.log(y=30); -> 원래는 암묵적 전역에 의해 참조할 수 있었으나 엄격 모드에 의해 제한된다.


function func() {

    x = 10;

    'use strict'; 
}

/** 
 * ! 함수 선두에 엄격 모드를 선언하지 않으면 작동하지 않는다. 반드시 전역에 사용하거나
 * ! 함수에서만 적용 시키고 싶을 때는 함수 첫 부분에 선언 해 주어야 한다.
*/

/** 
 * ! 엄격 모드의 위험성
 * ? 잠재된 문제를 사전에 방지하기 위해서 사용하는 모드이지만 이 녀석 마저도
 * ? 문제가 있다. 바로 외부 라이브러리 스크립트 와의 호환성이다. 
 * ? 자바의 전역 스코프는 단 하나다. 그렇기 때문에 다른 파일끼리에도 스코프의 규칙이 적용되기 때문에
 * ? 전역으로 엄격 모드를 설정한다면, 다른 외부 라이브러리에도 영향을 미치게 됩니다.
 * * 이를 막기 위해 사용하는 것이 즉시실행함수 입니다.
*/

/** 
 * * 즉시실행함수를 이용한 엄격 모드 적용
 * ? 즉시실행함수는 선언되자마자 바로 실행되는 함수를 뜻하며, 주로 최초 1회 초기화를 위해 사용되나,
 * ? 한 번 실행되는 순간 전역에서 사라지는 특징을 이용하면, 외부 라이브러리에게 영향을 주지 않고
 * ? 즉시 실행 함수 안에서 엄격 모드를 실행해 방지할 수 있다.
*/

(() => {
  
  'use strict';

  // 내용 -> 즉시 실행 함수 내에서의 전역 설정

})();

// ? 다른 외부 라이브러리에 엄격 모드가 적용되지 않음.

/** 
 * ! 내부 함수에서 또한 자제하자.
 * ? 내부 함수에서 조차도 함수 기준으로 적용했다 안 했다 하면 일관성이 떨어질 수 있다.
 * TODO 그냥 즉시 실행 함수 안에서 전역으로 설정하는 것이 아주 알맞다고 할 수 있다.
*/

/**
 * * strict mode 로 걸러지는 요소들.
 */

/** 
  * * 암묵적 전역 변수
  * ? 애초에 전역 변수를 선언하지도 않고 값을 할당하는 건 말이 안 된다. 
  * ? 단지 자바스크립트가 그걸 해내고 있을 뿐..
 */

/** 
 * * 변수,함수,매개변수 삭제
 * ? 객체의 프로퍼티는 delete를 통해 삭제할 수 있다. 애초에 변경 가능한 값이기 때문이다.
 * ? 그러나 원시값인 일반 변수들은 당연히 값을 변경할 수가 없으므로, delete가 안 된다.
*/

/** 
 * * 중복 변수
 * ? 같은 스코프의 중복 식별자를 가진 변수? 오우 쉣 바로 에러
*/

/** 
 * * 일반 함수의 this
 * ? this는 일반 함수에서 사용하라고 만들어진건 아닌 것 같다. 신기하게도 error가 뜨지 않으나,
 * ? 일반 함수의 this를 사용할 일은 없기 바란다.
 * ? 사용처는 생성자 함수 객체이다.
*/
